[user]
	name = ahuglajbclajep
	email = ahuglajbclajep@gmail.com

[core]
	ignorecase = false
	quotePath = false
	autocrlf = input
	excludesfile = ~/.gitignore_global
	editor = code -w

[credential]
	# see https://git-scm.com/docs/git-credential-cache
	helper = cache

[push]
	default = current

[rebase]
	autostash = true

[alias]
	# util
	# see https://git-scm.com/docs/git-rev-parse
	root-dir = rev-parse --show-toplevel
	current-branch = rev-parse --abbrev-ref @
	current-remote-branch = rev-parse --abbrev-ref @{u}

	# aliases
	cm = commit -am
	rh = reset --hard @
	r1 = reset @^

	# show all aliases
	aliases = !git config --name-only --get-regexp ^alias | cut -c 7-

	# my `git log --graph --decorate --oneline`
	# see https://git-scm.com/docs/git-log#_pretty_formats
	tree = log --graph --date=short --pretty=format:'%x09%C(yellow)%h%C(cyan)%d %C(magenta)%><(7,trunc)%an %Cgreen[%cd] %Creset%s'

	# my `git log --graph --decorate`
	tree-v = log --graph --pretty=format:'%x09%C(yellow)%h%Creset:%C(cyan)%d%n%x09  %C(magenta)<%an> %Cgreen[%ci, %cr]%n%x09  %Creset%s%n'

	# show differences character by character
	diff-char = diff --color-words='.'

	# shallow clone
	clone1 = clone --depth 1 --shallow-submodules

	# set the execute permission
	chmodx = update-index --chmod=+x

	# amend a commit without changing its commit message
	amend = commit --amend --no-edit

	# create an orphan branch
	orphan = "!f() { git checkout --orphan $1 && git rm -r --cached $(git root-dir); }; f"
	gh-pages = !git orphan gh-pages

	# move the latest commit to a new branch
	move1 = "!f() { local old=$(git current-branch); git branch -m $1 && git branch $old @^; }; f"

	# resets the index and working tree to remote state
	pull-f = "!f() { git fetch -v && git reset --hard $(git current-remote-branch); }; f"
